diff a/components/common/topBar.tsx b/components/common/topBar.tsx	(rejected hunks)
@@ -92,105 +101,131 @@ export default function TopBar() {
             >
               <div className="relative w-8 h-8">
                 <Image
                   src="/logo.png"
                   alt="웰니스박스"
                   ref={logoRef}
                   fill
                   sizes="64px"
                   className="object-contain group-hover:animate-bounce-custom"
                 />
               </div>
               웰니스박스
             </Link>
 
             <nav className="hidden lg:flex items-center gap-8 text-[15px] font-medium text-slate-500 [&_a]:text-slate-500 [&_a:hover]:text-slate-900">
               <MenuLinks loginStatus={loginStatus} />
             </nav>
           </div>
 
           <div className="flex items-center gap-3 md:gap-5">
             {loginStatus.isTestLoggedIn && (
               <span className="hidden sm:inline-flex rounded-full bg-orange-400 px-3 py-1 text-xs font-bold text-white cursor-default">
                 테스트
               </span>
             )}
-            <Link
-              href="/?cart=open#home-products"
-              scroll={false}
-              className={menuItemClasses("text-slate-600 relative")}
-              aria-label="장바구니"
-              onClick={() => {
-                showLoading();
-                if (typeof window !== "undefined") {
-                  sessionStorage.setItem("scrollPos", String(window.scrollY));
-                }
-              }}
-            >
-              <ShoppingCartIcon className="w-6 h-6" />
-              {cartCount > 0 && (
-                <span className="absolute -top-1 -right-1 min-w-[1.25rem] h-5 rounded-full bg-sky-500 text-white text-[11px] flex items-center justify-center px-1">
-                  {cartCount}
-                </span>
-              )}
-            </Link>
+            {pathname === "/" ? (
+              <button
+                className={menuItemClasses("text-slate-600 relative")}
+                aria-label="장바구니"
+                onClick={() => {
+                  if (typeof window !== "undefined") {
+                    sessionStorage.setItem("scrollPos", String(window.scrollY));
+                    window.dispatchEvent(new Event("openCart"));
+                  }
+                }}
+              >
+                <ShoppingCartIcon className="w-6 h-6" />
+                {cartCount > 0 && (
+                  <span className="absolute -top-1 -right-1 min-w-[1.25rem] h-5 rounded-full bg-sky-500 text-white text-[11px] flex items-center justify-center px-1">
+                    {cartCount}
+                  </span>
+                )}
+              </button>
+            ) : (
+              <Link
+                href="/?cart=open#home-products"
+                scroll={false}
+                className={menuItemClasses("text-slate-600 relative")}
+                aria-label="장바구니"
+                onClick={() => {
+                  if (typeof window !== "undefined") {
+                    sessionStorage.setItem("scrollPos", String(window.scrollY));
+                  }
+                  showLoading();
+                }}
+              >
+                <ShoppingCartIcon className="w-6 h-6" />
+                {cartCount > 0 && (
+                  <span className="absolute -top-1 -right-1 min-w-[1.25rem] h-5 rounded-full bg-sky-500 text-white text-[11px] flex items-center justify-center px-1">
+                    {cartCount}
+                  </span>
+                )}
+              </Link>
+            )}
             <button
               onClick={goSevenDays}
               className="hidden sm:block text-[15px] font-semibold text-slate-600"
             >
               7일 무료체험
             </button>
             <Link
               href="/?package=7#home-products"
               className="group relative inline-flex items-center justify-center rounded-full px-5 py-2 text-sm font-semibold text-white bg-gradient-to-r from-[#59C1FF] to-[#7B61FF] shadow-[0_10px_30px_rgba(86,115,255,0.35)] transition-all duration-300 ease-out will-change-transform hover:scale-[1.03] hover:shadow-[0_14px_36px_rgba(86,115,255,0.5)] hover:saturate-150 hover:brightness-110 hover:from-[#6BD1FF] hover:to-[#6E58FF] active:translate-y-[1px] focus:outline-none focus-visible:ring-2 focus-visible:ring-white/70 focus-visible:ring-offset-2 focus-visible:ring-offset-[#6E58FF] after:content-[''] after:absolute after:inset-0 after:rounded-full after:bg-white/20 after:opacity-0 hover:after:opacity-10"
-              onClick={showLoading}
+              onClick={() => {
+                if (shouldShowLoading('/?package=7#home-products')) {
+                  showLoading();
+                }
+              }}
             >
               시작하기
             </Link>
             <button
               className={menuItemClasses("text-2xl ml-1 lg:hidden")}
               onClick={() => setIsDrawerOpen(!isDrawerOpen)}
               aria-label="메뉴 열기"
             >
               ☰
             </button>
           </div>
         </div>
       </header>
 
       <div
         className={`fixed top-14 bottom-0 z-40 bg-white shadow-lg w-[260px] transition-[right] duration-300 ${
           isDrawerOpen ? "right-0" : "-right-[260px]"
         }`}
       >
         <div className="flex flex-col p-6 gap-4 text-[15px] font-medium text-slate-600 [&_a]:text-slate-700 [&_a]:hover:text-slate-900">
           <MenuLinks
             loginStatus={loginStatus}
             onItemClick={closeDrawer}
             isDrawer
           />
           <div className="mt-2 h-px bg-slate-100" />
           <button onClick={goSevenDays} className="text-left text-slate-500">
             7일 무료체험
           </button>
           <Link
             href="/?package=7#home-products"
             onClick={() => {
               closeDrawer();
-              showLoading();
+              if (shouldShowLoading('/?package=7#home-products')) {
+                showLoading();
+              }
             }}
             className="group relative inline-flex items-center justify-center rounded-full px-5 py-2 text-sm font-semibold !text-white bg-gradient-to-r from-[#59C1FF] to-[#7B61FF] shadow-[0_10px_30px_rgba(86,115,255,0.35)] transition-all duration-300 ease-out will-change-transform hover:scale-[1.03] hover:shadow-[0_14px_36px_rgba(86,115,255,0.5)] hover:saturate-150 hover:brightness-110 hover:from-[#6BD1FF] hover:to-[#6E58FF] active:translate-y-[1px] focus:outline-none focus-visible:ring-2 focus-visible:ring-white/70 focus-visible:ring-offset-2 focus-visible:ring-offset-[#6E58FF] after:content-[''] after:absolute after:inset-0 after:rounded-full after:bg-white/20 after:opacity-0 hover:after:opacity-10"
           >
             시작하기
           </Link>
         </div>
       </div>
 
       {isDrawerOpen && (
         <div
           className="fixed top-14 inset-x-0 bottom-0 z-30 bg-black/40"
           onClick={closeDrawer}
         />
       )}
     </>
   );
 }
