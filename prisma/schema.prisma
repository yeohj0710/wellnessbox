generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// Wellnessbox

model Category_ {
  idx      Int        @id @default(autoincrement())
  name     String?    @unique
  image    String?
  products Product_[]
}

model Product_ {
  idx         Int       @id @default(autoincrement())
  name        String?
  images      String[]
  description String?
  price       Int?
  categoryId  Int
  category    Category_ @relation(fields: [categoryId], references: [idx])
}

// Codingterrace

model Comment {
  idx           Int       @id @default(autoincrement())
  content       String
  images        String[]
  created_at    DateTime  @default(now())
  updated_at    DateTime
  nickname      String?
  ip            String?
  password      String?
  userIdx       Int?
  postIdx       Int
  parentIdx     Int?
  Comment       Comment?  @relation("CommentToComment", fields: [parentIdx], references: [idx])
  other_Comment Comment[] @relation("CommentToComment")
  Post          Post      @relation(fields: [postIdx], references: [idx], onDelete: Cascade)
  User          User?     @relation(fields: [userIdx], references: [idx], onDelete: Cascade)
}

model Post {
  idx        Int       @id @default(autoincrement())
  category   String
  title      String
  content    String
  password   String?
  created_at DateTime  @default(now())
  updated_at DateTime
  userIdx    Int?
  ip         String?
  nickname   String?
  Comment    Comment[]
  User       User?     @relation(fields: [userIdx], references: [idx], onDelete: Cascade)
}

model Subscription {
  id         Int      @id @default(autoincrement())
  endpoint   String
  p256dh     String
  auth       String
  type       String
  postId     Int?
  created_at DateTime @default(now())
  latitude   Float?
  longitude  Float?
  commentId  Int?

  @@unique([endpoint, type, postId, commentId])
}

model User {
  idx        Int       @id @default(autoincrement())
  id         String    @unique
  password   String
  nickname   String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime
  avatar     String?
  Comment    Comment[]
  Post       Post[]
}
